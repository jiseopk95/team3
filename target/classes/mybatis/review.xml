<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="review">

  <insert id="create" parameterType="ReviewVO">
  INSERT INTO review(reviewno, name, title, contents, rdate, files, filesize, thumbs, num, score, categoryno, memberno)
  VALUES((SELECT NVL(MAX(reviewno), 0)+1 as reviewno FROM review), #{name}, #{title}, #{contents}, sysdate,
             #{files}, #{filesize}, #{thumbs} , #{num} , #{score}, #{categoryno} , #{memberno} )
  </insert>
  
  <select id="list" resultType="ReviewVO">
    SELECT reviewno, name, title, contents, rdate, files, filesize, thumbs, num, score, categoryno, memberno
    FROM review
    ORDER BY reviewno ASC
  </select>
  
  <select id="list_index" resultType="ReviewVO">
    SELECT reviewno, name, title, contents, rdate, files, filesize, thumbs, num, score, categoryno, memberno
    FROM review
    WHERE <![CDATA[ ROWNUM <=5 ]]>
    ORDER BY reviewno ASC
  </select>   
  
  <select id="read" resultType="ReviewVO" parameterType="int">
    SELECT reviewno,
              name, title, contents, rdate, files, filesize, thumbs, num, score, categoryno, memberno
    FROM review
    WHERE reviewno=#{reviewno}
  </select>
  
  <delete id="delete" parameterType="int">
    DELETE FROM review
    WHERE reviewno=#{reviewno}
  </delete>
  
  <update id="update" parameterType="ReviewVO">
    UPDATE review
    SET title=#{title}, contents=#{contents}, name=#{name},
          thumbs=#{thumbs}, files=#{files}, filesize=#{filesize}, score=#{score}
    WHERE reviewno=#{reviewno}
  </update>
  
  <!-- category별 검색된 레코드 목록 -->
  <select id="list_by_category_search" resultType="ReviewVO" parameterType="HashMap">
    SELECT reviewno,
          categoryno, memberno, title,name, score, thumbs, files, filesize, num, rdate
    FROM review
    <choose>
      <when test="title == null or title == ''"> <!-- 검색하지 않는 경우 -->
        WHERE categoryno=#{categoryno}
      </when>
      <otherwise>
        WHERE categoryno=#{categoryno} AND title LIKE '%' || #{title} || '%'  
      </otherwise>
    </choose>
    ORDER BY reviewno DESC
  </select>
  
   <!-- category별 검색된 레코드 갯수 -->
  <select id="search_count" resultType="int" parameterType="HashMap">
    SELECT COUNT(*) as cnt
    FROM review
     <choose>
      <when test="title == null or title == ''"> <!-- 검색하지 않는 경우 -->
        WHERE categoryno=#{categoryno}
      </when>
      <otherwise>
        WHERE categoryno=#{categoryno} AND title LIKE '%' || #{title} || '%'  
      </otherwise>
    </choose>
  </select>
  
  <!-- category별 검색된 레코드 목록 + 페이징 -->
  <select id="list_by_category_search_paging" resultType="ReviewVO" parameterType="HashMap">
    SELECT reviewno, categoryno, title, contents, score, thumbs, files, filesize,
             num, rdate, r
    FROM (
              SELECT reviewno, categoryno, title, contents, score, thumbs, files, filesize,
                        num, rdate, rownum as r
              FROM (
                        SELECT  reviewno, categoryno, title, contents, score, thumbs, files, filesize,
                                    num, rdate
                        FROM review
                        <choose>
                          <when test="title == null or title == ''"> <!-- 검색하지 않는 경우 -->
                            WHERE categoryno=#{categoryno}
                          </when>
                          <otherwise>
                            WHERE categoryno=#{categoryno} AND title LIKE '%' || #{title} || '%'  
                          </otherwise>
                        </choose>
                        ORDER BY reviewno DESC
              )            
    )
    WHERE <![CDATA[ r >= #{startNum} AND r <= #{endNum} ]]> 
    <!--     WHERE r >= #{startNum} AND r <= #{endNum} -->
    
  </select>
    
</mapper>








